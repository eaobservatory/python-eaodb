# coding: utf-8
from sqlalchemy import CHAR, Column, DateTime, Float, String, text
from sqlalchemy.dialects.mysql import DATETIME, INTEGER, TINYINT
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()
metadata = Base.metadata


class ACSIS(Base):
    __tablename__ = 'ACSIS'
    __table_args__ = {'schema': 'jcmt'}

    obsid_subsysnr = Column(String(50), primary_key=True)
    obsid = Column(String(48), nullable=False, index=True)
    max_subscan = Column(INTEGER(11), nullable=False)
    obsend = Column(INTEGER(11))
    molecule = Column(String(70))
    transiti = Column(String(70))
    tempscal = Column(String(70))
    drrecipe = Column(String(70))
    bwmode = Column(String(70))
    subsysnr = Column(INTEGER(11))
    subbands = Column(String(70))
    nsubband = Column(INTEGER(11))
    subrefp1 = Column(INTEGER(11))
    subrefp2 = Column(INTEGER(11))
    nchnsubs = Column(INTEGER(11))
    refchan = Column(INTEGER(11))
    ifchansp = Column(Float(asdecimal=True))
    fft_win = Column(String(70))
    bedegfac = Column(Float(asdecimal=True))
    msroot = Column(String(70))
    sb_mode = Column(String(70))
    iffreq = Column(Float(asdecimal=True))
    n_mix = Column(INTEGER(11))
    obs_sb = Column(String(70))
    lofreqs = Column(Float(asdecimal=True))
    lofreqe = Column(Float(asdecimal=True))
    recptors = Column(String(70))
    refrecep = Column(String(70))
    medtsys = Column(Float(asdecimal=True))
    doppler = Column(String(70))
    ssysobs = Column(String(16))
    skyrefx = Column(String(70))
    skyrefy = Column(String(70))
    num_nods = Column(INTEGER(11))
    ncalstep = Column(INTEGER(11))
    nrefstep = Column(INTEGER(11))
    stbetref = Column(INTEGER(11))
    stbetcal = Column(INTEGER(11))
    freq_sig_lower = Column(Float(asdecimal=True))
    freq_sig_upper = Column(Float(asdecimal=True))
    freq_img_lower = Column(Float(asdecimal=True))
    freq_img_upper = Column(Float(asdecimal=True))
    zsource = Column(Float(asdecimal=True))
    restfreq = Column(Float(asdecimal=True))
    nchannels = Column(INTEGER(11))
    ssyssrc = Column(String(16))
    medtrx = Column(Float(asdecimal=True))
    specid = Column(TINYINT(4))
    asn_id = Column(String(32))


class COMMON(Base):
    __tablename__ = 'COMMON'
    __table_args__ = {'schema': 'jcmt'}

    obsid = Column(String(48), primary_key=True, unique=True)
    telescop = Column(String(6))
    origin = Column(String(60))
    obsgeo_x = Column(Float(asdecimal=True))
    obsgeo_y = Column(Float(asdecimal=True))
    obsgeo_z = Column(Float(asdecimal=True))
    alt_obs = Column(Float(asdecimal=True))
    lat_obs = Column(Float(asdecimal=True))
    long_obs = Column(Float(asdecimal=True))
    etal = Column(Float(asdecimal=True))
    project = Column(String(32), index=True)
    recipe = Column(String(70))
    drgroup = Column(INTEGER(11))
    msbid = Column(String(40), nullable=False)
    survey = Column(String(10))
    rmtagent = Column(String(10))
    agentid = Column(String(70))
    object = Column(String(70))
    standard = Column(INTEGER(11))
    obsnum = Column(INTEGER(11))
    utdate = Column(INTEGER(11), index=True)
    date_obs = Column(DATETIME(fsp=3), nullable=False, index=True)
    date_end = Column(DATETIME(fsp=3), nullable=False, index=True)
    instap = Column(String(8))
    instap_x = Column(Float(asdecimal=True))
    instap_y = Column(Float(asdecimal=True))
    amstart = Column(Float(asdecimal=True))
    amend = Column(Float(asdecimal=True))
    azstart = Column(Float(asdecimal=True))
    azend = Column(Float(asdecimal=True))
    elstart = Column(Float(asdecimal=True))
    elend = Column(Float(asdecimal=True))
    hststart = Column(DATETIME(fsp=3))
    hstend = Column(DATETIME(fsp=3))
    lststart = Column(Float(asdecimal=True))
    lstend = Column(Float(asdecimal=True))
    int_time = Column(Float(asdecimal=True))
    atstart = Column(Float(asdecimal=True))
    atend = Column(Float(asdecimal=True))
    humstart = Column(Float(asdecimal=True))
    humend = Column(Float(asdecimal=True))
    bpstart = Column(Float(asdecimal=True))
    bpend = Column(Float(asdecimal=True))
    wndspdst = Column(Float(asdecimal=True))
    wndspden = Column(Float(asdecimal=True))
    wnddirst = Column(Float(asdecimal=True))
    wnddiren = Column(Float(asdecimal=True))
    tau225st = Column(Float(asdecimal=True))
    tau225en = Column(Float(asdecimal=True))
    taudatst = Column(DateTime)
    taudaten = Column(DateTime)
    tausrc = Column(String(16))
    wvmtaust = Column(Float(asdecimal=True))
    wvmtauen = Column(Float(asdecimal=True))
    wvmdatst = Column(DateTime)
    wvmdaten = Column(DateTime)
    seeingst = Column(Float(asdecimal=True))
    seeingen = Column(Float(asdecimal=True))
    seedatst = Column(DateTime)
    seedaten = Column(DateTime)
    frlegtst = Column(Float(asdecimal=True))
    frlegten = Column(Float(asdecimal=True))
    bklegtst = Column(Float(asdecimal=True))
    bklegten = Column(Float(asdecimal=True))
    sam_mode = Column(String(8))
    sw_mode = Column(String(8))
    obs_type = Column(String(10))
    chop_crd = Column(String(12))
    chop_frq = Column(Float(asdecimal=True))
    chop_pa = Column(Float(asdecimal=True))
    chop_thr = Column(Float(asdecimal=True))
    jigl_cnt = Column(INTEGER(11))
    jigl_nam = Column(String(70))
    jigl_pa = Column(Float(asdecimal=True))
    jigl_crd = Column(String(12))
    map_hght = Column(Float(asdecimal=True))
    map_pa = Column(Float(asdecimal=True))
    map_wdth = Column(Float(asdecimal=True))
    locl_crd = Column(String(12))
    map_x = Column(Float(asdecimal=True))
    map_y = Column(Float(asdecimal=True))
    scan_crd = Column(String(12))
    scan_vel = Column(Float(asdecimal=True))
    scan_dy = Column(Float(asdecimal=True))
    scan_pa = Column(Float(asdecimal=True))
    scan_pat = Column(String(28))
    align_dx = Column(Float(asdecimal=True))
    align_dy = Column(Float(asdecimal=True))
    focus_dz = Column(Float(asdecimal=True))
    daz = Column(Float(asdecimal=True))
    _del = Column('del', Float(asdecimal=True))
    uaz = Column(Float(asdecimal=True))
    uel = Column(Float(asdecimal=True))
    steptime = Column(Float(asdecimal=True))
    num_cyc = Column(INTEGER(11))
    jos_mult = Column(INTEGER(11))
    jos_min = Column(INTEGER(11))
    startidx = Column(INTEGER(11))
    focaxis = Column(CHAR(1))
    nfocstep = Column(INTEGER(11))
    focstep = Column(Float(asdecimal=True))
    ocscfg = Column(String(70))
    status = Column(String(8))
    pol_conn = Column(INTEGER(11))
    pol_mode = Column(String(9))
    rotafreq = Column(Float(asdecimal=True))
    instrume = Column(String(8), index=True)
    backend = Column(String(8))
    release_date = Column(DateTime)
    last_modified = Column(DateTime, nullable=False, server_default=text("current_timestamp() ON UPDATE current_timestamp()"))
    obsra = Column(Float(asdecimal=True))
    obsdec = Column(Float(asdecimal=True))
    obsratl = Column(Float(asdecimal=True))
    obsrabl = Column(Float(asdecimal=True))
    obsratr = Column(Float(asdecimal=True))
    obsrabr = Column(Float(asdecimal=True))
    obsdectl = Column(Float(asdecimal=True))
    obsdecbl = Column(Float(asdecimal=True))
    obsdectr = Column(Float(asdecimal=True))
    obsdecbr = Column(Float(asdecimal=True))
    dut1 = Column(Float(asdecimal=True))
    msbtid = Column(String(32))
    jig_scal = Column(Float(asdecimal=True))
    inbeam = Column(String(64))
    inbeam_orig = Column(String(64))
    moving_target = Column(TINYINT(1))
    last_caom_mod = Column(DateTime, index=True)
    req_mintau = Column(Float(asdecimal=True))
    req_maxtau = Column(Float(asdecimal=True))
    msbtitle = Column(String(70))
    oper_loc = Column(String(70))
    oper_sft = Column(String(70))


class FILES(Base):
    __tablename__ = 'FILES'
    __table_args__ = {'schema': 'jcmt'}

    file_id = Column(String(70), primary_key=True)
    obsid = Column(String(48), nullable=False, index=True)
    subsysnr = Column(INTEGER(11), nullable=False)
    nsubscan = Column(INTEGER(11), nullable=False)
    obsid_subsysnr = Column(String(50), nullable=False, index=True)
    md5sum = Column(String(40))
    filesize = Column(INTEGER(11))


class RXH3(Base):
    __tablename__ = 'RXH3'
    __table_args__ = {'schema': 'jcmt'}

    obsid_subsysnr = Column(String(50), primary_key=True, unique=True)
    obsid = Column(String(48), nullable=False, index=True)
    xleft = Column(Float(asdecimal=True))
    xright = Column(Float(asdecimal=True))
    ybottom = Column(Float(asdecimal=True))
    ytop = Column(Float(asdecimal=True))
    nfreq = Column(INTEGER(11))
    fperiod = Column(Float(asdecimal=True))
    c4x = Column(Float(asdecimal=True))
    c4y = Column(Float(asdecimal=True))
    c4z = Column(Float(asdecimal=True))
    tmux = Column(Float(asdecimal=True))
    tmuy = Column(Float(asdecimal=True))
    rxh3_x = Column(Float(asdecimal=True))
    rxh3_y = Column(Float(asdecimal=True))
    rowlen = Column(Float(asdecimal=True))
    rowvel = Column(Float(asdecimal=True))
    rowspcng = Column(Float(asdecimal=True))
    nsxfreqs = Column(INTEGER(11))
    nrows = Column(INTEGER(11))
    reverse = Column(INTEGER(11))
    freqband = Column(Float(asdecimal=True))
    sxperiod = Column(Float(asdecimal=True))
    freerun = Column(INTEGER(11))
    ncalrows = Column(INTEGER(11))
    ncalpnts = Column(INTEGER(11))
    horzmap = Column(INTEGER(11))
    smuzpos = Column(Float(asdecimal=True))
    sxtrggrd = Column(INTEGER(11))
    freqfile = Column(String(255))
    ovrsmple = Column(INTEGER(11))
    calpos_x = Column(Float(asdecimal=True))
    calpos_y = Column(Float(asdecimal=True))


class SCUBA2(Base):
    __tablename__ = 'SCUBA2'
    __table_args__ = {'schema': 'jcmt'}

    obsid_subsysnr = Column(String(50), primary_key=True, unique=True)
    filter = Column(String(10), nullable=False, index=True)
    subarray_a = Column(TINYINT(1), server_default=text("0"))
    subarray_b = Column(TINYINT(1), server_default=text("0"))
    subarray_c = Column(TINYINT(1), server_default=text("0"))
    subarray_d = Column(TINYINT(1), server_default=text("0"))
    arrayid_a = Column(String(32))
    arrayid_b = Column(String(32))
    arrayid_c = Column(String(32))
    arrayid_d = Column(String(32))
    max_subscan = Column(INTEGER(11), nullable=False)
    wavelen = Column(Float(asdecimal=True), nullable=False)
    shutter = Column(Float(asdecimal=True), nullable=False)
    bandwid = Column(Float(asdecimal=True), nullable=False)
    bbheat = Column(Float(asdecimal=True), nullable=False)
    basetemp = Column(Float(asdecimal=True))
    pixheat_a = Column(INTEGER(11))
    pixheat_b = Column(INTEGER(11))
    pixheat_c = Column(INTEGER(11))
    pixheat_d = Column(INTEGER(11))
    bias_a = Column(INTEGER(11))
    bias_b = Column(INTEGER(11))
    bias_c = Column(INTEGER(11))
    bias_d = Column(INTEGER(11))
    flat_a = Column(String(32))
    flat_b = Column(String(32))
    flat_c = Column(String(32))
    flat_d = Column(String(32))
    obsid = Column(String(48), nullable=False, index=True, server_default=text("''"))
    asn_id = Column(String(6))


class keep_in_hilo(Base):
    __tablename__ = 'keep_in_hilo'
    __table_args__ = {'schema': 'jcmt'}

    project = Column(String(32), primary_key=True)
    comment = Column(String(200))


class keep_in_hilo_obs(Base):
    __tablename__ = 'keep_in_hilo_obs'
    __table_args__ = {'schema': 'jcmt'}

    obsid = Column(String(48), primary_key=True)
    project = Column(String(32), nullable=False)


class transfer(Base):
    __tablename__ = 'transfer'
    __table_args__ = {'schema': 'jcmt'}

    file_id = Column(String(70), primary_key=True)
    status = Column(CHAR(1))
    created = Column(DateTime, nullable=False, server_default=text("current_timestamp()"))
    modified = Column(DateTime)
    location = Column(String(200))
    error = Column(TINYINT(1), server_default=text("0"))
    comment = Column(String(250))
    keep_jac = Column(TINYINT(1), server_default=text("0"))
